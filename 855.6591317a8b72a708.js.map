{"version":3,"file":"855.6591317a8b72a708.js","mappings":"0PACEA,kBAA4E,WAExEA,qBACFA,QACAA,iBACEA,mBAAgE,YAAhEA,CAAgE,YAAhEA,CAAgE,YAAhEA,CAAgE,aAKhEA,wBAAgE,mBACtCA,iBAAIA,QAC5BA,yBAA0BA,mBAAMA,UAElCA,wBAAkF,kBAElFA,2BAA0CA,2FAAaA,QACvDA,2BAA0CA,iDAAMA,QAChDA,2BAA0CA,qFAAYA,QACtDA,gBAAK,gBAC+BA,mEAASA,6CApBQA,0BAE5CA,2CAA+B,sCCQxC,MAAOC,EALbC,cAMUC,sBAAgBC,OAAOC,MACvBF,oBAAcC,OAAOE,KACrBH,oBAAcC,OAAOG,MAC7BJ,UAAkBA,KAAKK,YAAYC,MAAM,CACvCC,IAAK,CAAC,GAAIC,eACVC,MAAO,CAAC,GAAID,eACZE,MAAO,CAAC,GAAI,CAACF,cAAqBA,aAClCG,WAAY,CAAC,GAAIH,eACjBI,YAAa,CAAC,IACdC,UAAW,CAAC,GAAIL,eAChBM,OAAQ,CAAC,GAAIN,eACbO,YAAa,CAAC,IACdC,QAAS,CAAC,GAAIR,eACdS,WAAY,CAAC,CAAEC,OAAO,EAAOC,UAAU,IACvCC,WAAY,CAAC,CAAEF,OAAO,EAAOC,UAAU,IACvCE,WAAY,CAAC,CAAEH,OAAO,EAAOC,UAAU,IACvCG,YAAa,CAAC,QAEhBtB,WAAQA,KAAKuB,cAAcC,WAAWC,QACpCC,KAAUC,GAAQ3B,KAAK4B,YAAYC,QAAQF,EAAKG,aAAaC,WAAQ,EACrEC,KAAKL,IACHM,QAAQC,IAAIP,GACZ3B,KAAKmC,KAAKC,WAAWT,EAAI,KAvBlB7B,EAAgB,oCAAhBA,EAAgB,EAAhBA,EAAgB,sBAAhBA,EAAgBuC,8mCDX7BxC,mBACEA,0CAwBFA,eAxBSA,umBEgCH,MAAOyC,KAAa,oCAAbA,EAAa,EAAbA,EAAa,sBAAbA,MAAa,0BAnBtBC,KACAC,MACAC,KACAC,MACAC,MACAC,MACAC,MACAC,MACAC,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAWnD,EACXoD,KAAM,CACJC,MAAO","names":["i0","ProfileComponent","constructor","this","inject","NbAuthService","AuthService","FormBuilder","formBuilder","group","uid","Validators","phone","email","first_name","middle_name","last_name","gender","description","address","is_teacher","value","disabled","is_student","is_blocked","avatar_urls","nbAuthService","getToken","pipe","switchMap","user","authService","getUser","getPayload","user_id","tap","console","log","form","patchValue","selectors","ProfileModule","CommonModule","NbCardModule","ReactiveFormsModule","NbInputModule","NbButtonModule","NbCheckboxModule","NbSelectModule","NbUserModule","RouterModule","path","component","data","title"],"sourceRoot":"webpack:///","sources":["./src/app/profile/containers/profile/profile.component.html","./src/app/profile/containers/profile/profile.component.ts","./src/app/profile/profile.module.ts"],"sourcesContent":["<nb-card>\n  <form *ngIf=\"user$ | async as user\" class=\"profile-form\" [formGroup]=\"form\">\n    <div class=\"profile-image\">\n      <nb-user [picture]=\"user.avatar_urls[0]\"  [name]=\"user.first_name + ' ' + user.last_name\" showName=\"false\"></nb-user>\n    </div>\n    <div class=\"profile-block\">\n      <input nbInput placeholder=\"Имя\" formControlName=\"first_name\" />\n      <input nbInput placeholder=\"Фамилия\" formControlName=\"last_name\" />\n      <input nbInput placeholder=\"Отчество\" formControlName=\"middle_name\" />\n      <input nbInput placeholder=\"Телефон\" formControlName=\"phone\" />\n      <input nbInput placeholder=\"E-mail\" formControlName=\"email\" />\n      <nb-select placeholder=\"Select Gender\" formControlName=\"gender\">\n        <nb-option value=\"male\">Male</nb-option>\n        <nb-option value=\"female\">Female</nb-option>\n      </nb-select>\n      <textarea nbInput placeholder=\"Описание\" formControlName=\"description\"></textarea>\n      <textarea nbInput placeholder=\"Адрес\" formControlName=\"address\"></textarea>\n      <nb-checkbox formControlName=\"is_teacher\">Преподаватель</nb-checkbox>\n      <nb-checkbox formControlName=\"is_student\">Ученик</nb-checkbox>\n      <nb-checkbox formControlName=\"is_blocked\">Заблокирован</nb-checkbox>\n      <div>\n        <button nbButton status=\"primary\">Сохранить</button>\n      </div>\n    </div>\n  </form>\n</nb-card>\n","import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbAuthService } from '@nebular/auth';\nimport { switchMap, tap } from 'rxjs';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n  private nbAuthService = inject(NbAuthService);\n  private authService = inject(AuthService);\n  private formBuilder = inject(FormBuilder);\n  form: FormGroup = this.formBuilder.group({\n    uid: ['', Validators.required],\n    phone: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    first_name: ['', Validators.required],\n    middle_name: [''],\n    last_name: ['', Validators.required],\n    gender: ['', Validators.required],\n    description: [''],\n    address: ['', Validators.required],\n    is_teacher: [{ value: false, disabled: true }],\n    is_student: [{ value: false, disabled: true }],\n    is_blocked: [{ value: false, disabled: true }],\n    avatar_urls: [null],\n  });\n  user$ = this.nbAuthService.getToken().pipe(\n    switchMap(user => this.authService.getUser(user.getPayload().user_id)),\n    tap((user) => {\n      console.log(user);\n      this.form.patchValue(user);\n    })\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent } from './containers/profile/profile.component';\nimport { RouterModule } from '@angular/router';\nimport { NbButtonModule, NbCardModule, NbCheckboxModule, NbInputModule, NbSelectModule, NbUserModule } from '@nebular/theme';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    NbCardModule,\n    ReactiveFormsModule,\n    NbInputModule,\n    NbButtonModule,\n    NbCheckboxModule,\n    NbSelectModule,\n    NbUserModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProfileComponent,\n        data: {\n          title: 'Профиль',\n        }\n      },\n    ]),\n  ],\n})\nexport class ProfileModule { }\n"],"x_google_ignoreList":[]}