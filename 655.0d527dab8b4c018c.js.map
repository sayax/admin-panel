{"version":3,"file":"655.0d527dab8b4c018c.js","mappings":"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","names":["DanceStyle","DanceLevel","STYLES","value","title","LEVELS","i0","TeacherListComponent","constructor","this","inject","TeacherService","NbDialogService","FormBuilder","NbToastrService","ChangeDetectorRef","formBuilder","group","uid","Validators","is_active","styles","level","ngOnInit","getData","list$","teacherService","getList","users$","getUsers","openDialog","dialog","ref","dialogService","open","addTeacher","form","subscribe","complete","toastr","show","status","loading","close","cdr","markForCheck","error","message","console","log","removeTeacher","teacher","selectors","TeacherListModule","CommonModule","NbListModule","NbCardModule","NbUserModule","NbButtonModule","NbSelectModule","NbInputModule","NbIconModule","NbTooltipModule","ReactiveFormsModule","NbDialogModule","SharedModule","RouterModule","path","component","data"],"sourceRoot":"webpack:///","sources":["./src/app/backend/model/teacher.ts","./src/app/teacher/utils/teacher.ts","./src/app/teacher/containers/teacher-list/teacher-list.component.html","./src/app/teacher/containers/teacher-list/teacher-list.component.ts","./src/app/teacher/containers/teacher-list/teacher-list.module.ts"],"sourcesContent":["import { Timestamp } from \"@angular/fire/firestore\";\r\n\r\nexport interface Teacher {\r\n  created_on: Timestamp;\r\n  updated_on: Timestamp;\r\n  start_date: Timestamp;\r\n  end_date?: Timestamp;\r\n  level: string;\r\n  uid: string; // profile uid\r\n  is_active: boolean;\r\n  styles: DanceStyle[];\r\n}\r\n\r\nexport interface TeacherDTO {\r\n  uid: string;\r\n  phone: string;\r\n  email: string;\r\n  first_name: string;\r\n  middle_name?: string;\r\n  last_name: string;\r\n  avatar_url: string;\r\n  start_date: Timestamp;\r\n  level: string;\r\n  styles: DanceStyle[];\r\n}\r\n\r\nexport enum DanceStyle {\r\n  kizomba = 'kizomba',\r\n  salsa = 'salsa',\r\n  bachata = 'bachata',\r\n}\r\n\r\nexport enum DanceLevel {\r\n  beginner = 'beginner',\r\n  intermediate = 'intermediate',\r\n  advanced = 'advanced',\r\n  pro = 'pro',\r\n}\r\n","import { DanceLevel, DanceStyle } from \"src/app/backend/model/teacher\";\r\n\r\nexport const STYLES = [\r\n  {\r\n    value: DanceStyle.kizomba,\r\n    title: 'Кизомба',\r\n  },\r\n  {\r\n    value: DanceStyle.salsa,\r\n    title: 'Сальса',\r\n  },\r\n  {\r\n    value: DanceStyle.bachata,\r\n    title: 'Бачата',\r\n  },\r\n]\r\n\r\nexport const LEVELS = [\r\n  {\r\n    value: DanceLevel.beginner,\r\n    title: 'Начинающий',\r\n  },\r\n  {\r\n    value: DanceLevel.intermediate,\r\n    title: 'Средний',\r\n  },\r\n  {\r\n    value: DanceLevel.advanced,\r\n    title: 'Высокий',\r\n  },\r\n  {\r\n    value: DanceLevel.pro,\r\n    title: 'Профи',\r\n  },\r\n]\r\n","<nb-card size=\"large\">\n  <nb-card-header>\n    <button nbButton status=\"primary\" type=\"button\" (click)=\"openDialog(dialog)\">Добавить преподавателя</button>\n  </nb-card-header>\n  <nb-card-body>\n    <ng-container *ngIf=\"list$ | async as list\">\n      <nb-list *ngIf=\"list.length; else noTeachers\">\n        <nb-list-item *ngFor=\"let teacher of list\">\n          <nb-user [picture]=\"(teacher.avatar_url | mediaUrl | async) || ''\" [name]=\"teacher.first_name + ' ' + teacher.last_name\" [title]=\"teacher.level + ' преподаватель'\">\n          </nb-user>\n          <button nbButton type=\"button\" class=\"teacher-delete-button\" [disabled]=\"loading\" nbTooltip=\"Удалить преподавателя\" nbTooltipStatus=\"primary\" (click)=\"removeTeacher(teacher)\">\n            <nb-icon icon=\"trash-outline\"></nb-icon>\n          </button>\n        </nb-list-item>\n      </nb-list>\n    </ng-container>\n    <ng-template #noTeachers>\n      <p>Добавьте преподавателей</p>\n    </ng-template>\n  </nb-card-body>\n</nb-card>\n<ng-template #dialog let-data let-ref=\"dialogRef\">\n  <nb-card>\n    <nb-card-header>Добавить преподавателя</nb-card-header>\n    <nb-card-body>\n      <form [formGroup]=\"form\">\n        <div class=\"form-group\">\n          <label for=\"uid\">Пользователь</label>\n          <nb-select placeholder=\"Выберите пользователя\" name=\"uid\" [status]=\"form.get('uid')?.touched ? (form.get('uid')?.invalid  ? 'danger' : 'success') : 'basic'\" formControlName=\"uid\">\n            <nb-option *ngFor=\"let user of users$ | async\" [value]=\"user.uid\">{{ user.first_name }} {{user.last_name}}</nb-option>\n          </nb-select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"styles\">Стили</label>\n          <nb-select multiple placeholder=\"Выберите стили\" name=\"styles\" [status]=\"form.get('styles')?.touched ? (form.get('styles')?.invalid  ? 'danger' : 'success') : 'basic'\" formControlName=\"styles\">\n            <nb-option *ngFor=\"let style of styles\" [value]=\"style.value\">{{ style.title }}</nb-option>\n          </nb-select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"level\">Уровень</label>\n          <nb-select placeholder=\"Выберите уровень\" name=\"level\" [status]=\"form.get('level')?.touched ? (form.get('level')?.invalid  ? 'danger' : 'success') : 'basic'\" formControlName=\"level\">\n            <nb-option *ngFor=\"let level of levels\" [value]=\"level.value\">{{ level.title }}</nb-option>\n          </nb-select>\n        </div>\n      </form>\n    </nb-card-body>\n    <nb-card-footer>\n      <button nbButton (click)=\"ref.close()\">Отмена</button>\n      <button nbButton status=\"primary\" [disabled]=\"loading\" (click)=\"addTeacher(form)\">Сохранить</button>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, TemplateRef, inject, OnInit } from '@angular/core';\nimport { TeacherService } from '../../services/teacher.service';\nimport { NbDialogRef, NbDialogService, NbToastrService } from '@nebular/theme';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { DanceLevel, DanceStyle, Teacher, TeacherDTO } from 'src/app/backend/model/teacher';\nimport { ProfileDTO } from 'src/app/backend/model/profile';\nimport { LEVELS, STYLES } from '../../utils/teacher';\n\n@Component({\n  selector: 'app-teacher-list',\n  templateUrl: './teacher-list.component.html',\n  styleUrls: ['./teacher-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TeacherListComponent implements OnInit {\n  private teacherService = inject(TeacherService);\n  private dialogService = inject(NbDialogService);\n  private formBuilder = inject(FormBuilder);\n  private toastr = inject(NbToastrService);\n  private cdr = inject(ChangeDetectorRef);\n  loading = false;\n\n  styles = STYLES;\n\n  levels = LEVELS;\n\n  list$!: Observable<TeacherDTO[]>;\n  users$!: Observable<ProfileDTO[]>;\n  private ref!: NbDialogRef<any>;\n\n  form: FormGroup = this.formBuilder.group({\n    uid: [null, Validators.required],\n    is_active: [true],\n    styles: [null],\n    level: ['', Validators.required],\n  })\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.list$ = this.teacherService.getList();\n    this.users$ = this.teacherService.getUsers();\n  }\n\n  openDialog(dialog: TemplateRef<any>) {\n    this.ref = this.dialogService.open(dialog);\n  }\n\n  addTeacher(form: FormGroup) {\n    this.teacherService.addTeacher(form.value).subscribe({\n\n      complete: () => {\n        this.toastr.show('Преподаватель добавлен', 'Данные сохранены', { status: 'success' });\n        this.loading = false;\n        this.ref.close();\n        this.cdr.markForCheck();\n        this.getData();\n      },\n      error: (error) => {\n        this.toastr.show(error?.message, 'Произошла ошибка', { status: 'error' });\n        console.log('error', error);\n        this.loading = false;\n        this.cdr.markForCheck();\n      },\n    })\n  }\n\n  removeTeacher(teacher: TeacherDTO) {\n    this.teacherService.removeTeacher({\n      uid: teacher.uid,\n    }).subscribe({\n      complete: () => {\n        this.toastr.show('Преподаватель удален', 'Данные сохранены', { status: 'success' });\n        this.loading = false;\n        this.cdr.markForCheck();\n        this.getData();\n      },\n      error: (error) => {\n        this.toastr.show(error?.message, 'Произошла ошибка', { status: 'error' });\n        console.log('error', error);\n        this.loading = false;\n        this.cdr.markForCheck();\n      },\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeacherListComponent } from './teacher-list.component';\nimport { RouterModule } from '@angular/router';\nimport { NbButtonModule, NbCardModule, NbDialogModule, NbIconModule, NbInputModule, NbListModule, NbSelectModule, NbTooltipModule, NbUserModule } from '@nebular/theme';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    TeacherListComponent\n  ],\n  imports: [\n    CommonModule,\n    NbListModule,\n    NbCardModule,\n    NbUserModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbInputModule,\n    NbIconModule,\n    NbTooltipModule,\n    ReactiveFormsModule,\n    NbDialogModule.forChild(),\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: TeacherListComponent,\n        data: {\n          title: 'Преподаватели',\n        }\n      },\n    ]),\n  ]\n})\nexport class TeacherListModule { }\n"],"x_google_ignoreList":[]}