{"version":3,"file":"874.03afeb0e02558ce4.js","mappings":"oOAUM,MAAOA,EAHbC,cAIUC,kBAAuBC,OAAOC,MAC9BF,0BAAoBG,MAAWH,KAAKI,UAAWC,aAC/CL,uBAAiBC,OAAOK,KAEhCC,cACE,MAAMC,KAAeC,MAAMT,KAAKU,qBAAmBC,MAAM,YAAa,MAAM,IAE5E,SADwBC,QAAKC,MAAQL,IACdM,QACrBC,KAAUC,IACR,MAAMC,EAAcD,EAAKE,KAAKC,IAAIC,GAAOA,EAAIJ,QACvCK,EAA0CJ,EAAYK,OAAO,CAACC,EAAMC,SACrED,EACH,CAACC,EAAQC,aAAcD,IACrB,IACEE,EAAYT,EAAYE,IAAIC,GAAOA,EAAIK,aAC7C,OAAOzB,KAAK2B,eAAeC,eAAeF,GAAWZ,QACnDK,KAAIU,GACKA,EAAMV,IAAIW,KAEbC,IAAKV,EAAcS,EAAKC,KAAKA,IAC7BC,MAAOF,EAAKE,MACZC,MAAOH,EAAKG,MACZC,WAAYJ,EAAKI,WACjBC,YAAaL,EAAKK,YAClBC,UAAWN,EAAKM,UAChBC,WAAYP,EAAKQ,YAAY,GAC7BC,WAAYlB,EAAcS,EAAKC,KAAKQ,WACpCC,OAAQnB,EAAcS,EAAKC,KAAKS,WAGpC,GAIV,CAEAC,WAAWV,GACT,MAAMW,KAAMtB,MAAIpB,KAAKU,kBAAmBqB,GACxC,SAAOnB,QAAK+B,MAAOD,IAAM5B,QACvBK,KAAIH,GAAQA,EAAKA,SAAiB,EAClCD,KAAU6B,GACD5C,KAAK2B,eAAekB,QAAQD,EAAQnB,aAAaX,QACtDK,KAAIW,KACFC,IAAKa,EAAQb,IACbC,MAAOF,EAAKE,MACZC,MAAOH,EAAKG,MACZC,WAAYJ,EAAKI,WACjBC,YAAaL,EAAKK,YAClBC,UAAWN,EAAKM,UAChBC,WAAYP,EAAKQ,YAAY,GAC7BC,WAAYK,EAAQL,WACpBC,OAAQI,EAAQJ,YAK1B,EAzDW1C,EAAiB,oCAAjBA,EAAiB,EAAjBA,EAAiB,wBAAjBA,EAAiBgD,QAAjBhD,EAAiB,qBAFhB,SCAR,MAAOiD,EAHbhD,cAIUC,0BAAoBC,OAAOH,GAEnCkD,UACE,OAAOhD,KAAKiD,kBAAkB1C,aAChC,EALWwC,EAAc,oCAAdA,EAAc,EAAdA,EAAc,wBAAdA,EAAcD,QAAdC,EAAc,qBAFb,gDCJVG,wBACEA,qBAEFA,kCAFWA,uCAA8B,oCAA9BA,CAA8B,2FCKvC,MAAOC,EALbpD,cAMUC,uBAAiBC,OAAO8C,GAChC/C,WAAQA,KAAKoD,eAAeJ,WAFjBG,EAAoB,oCAApBA,EAAoB,EAApBA,EAAoB,sBAApBA,EAAoBE,0JDRjCH,qBAAsB,aAElBA,iDAIFA,iBAJoCA,gHE0BhC,MAAOI,KAAiB,oCAAjBA,EAAiB,EAAjBA,EAAiB,sBAAjBA,MAAiB,0BAf1BC,KACAC,MACAC,MACAC,MACAC,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAWV,EACXnC,KAAM,CACJ8C,MAAO","names":["TeacherApiService","constructor","this","inject","Firestore","collection","firestore","Collection","UserApiService","getTeachers","teacherQuery","query","teacherCollection","where","from","getDocs","pipe","switchMap","data","teacherData","docs","map","doc","teacherObject","reduce","prev","current","profile_uid","user_uids","userApiService","getUsersInList","users","user","uid","phone","email","first_name","middle_name","last_name","avatar_url","avatar_urls","start_date","styles","getTeacher","ref","getDoc","teacher","getUser","factory","TeacherService","getList","teacherApiService","i0","TeacherListComponent","teacherService","selectors","TeacherListModule","CommonModule","NbListModule","NbCardModule","NbUserModule","RouterModule","path","component","title"],"sourceRoot":"webpack:///","sources":["./src/app/backend/services/teacher-api.service.ts","./src/app/teacher/services/teacher.service.ts","./src/app/teacher/containers/teacher-list/teacher-list.component.html","./src/app/teacher/containers/teacher-list/teacher-list.component.ts","./src/app/teacher/containers/teacher-list/teacher-list.module.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Firestore, collection, doc, getDoc, getDocs, query, where } from '@angular/fire/firestore';\nimport { Observable, from, map, switchMap } from 'rxjs';\nimport { Teacher, TeacherDTO } from '../model/teacher';\nimport { Collection } from '../model/collections';\nimport { UserApiService } from './user-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeacherApiService {\n  private firestore: Firestore = inject(Firestore);\n  private teacherCollection = collection(this.firestore, Collection.TEACHER);\n  private userApiService = inject(UserApiService);\n\n  getTeachers(): Observable<TeacherDTO[]> {\n    const teacherQuery = query(this.teacherCollection, where('is_active', '==', true));\n    const teacherSnapshot = from(getDocs(teacherQuery));\n    return teacherSnapshot.pipe(\n      switchMap(data => {\n        const teacherData = data.docs.map(doc => doc.data() as Teacher);\n        const teacherObject: {[key: string]: Teacher} = teacherData.reduce((prev, current) => ({\n          ...prev,\n          [current.profile_uid]: current,\n        }), {});\n        const user_uids = teacherData.map(doc => doc.profile_uid);\n        return this.userApiService.getUsersInList(user_uids).pipe(\n          map(users => {\n            return users.map(user => {\n              return {\n                uid: teacherObject[user.uid].uid,\n                phone: user.phone,\n                email: user.email,\n                first_name: user.first_name,\n                middle_name: user.middle_name,\n                last_name: user.last_name,\n                avatar_url: user.avatar_urls[0],\n                start_date: teacherObject[user.uid].start_date,\n                styles: teacherObject[user.uid].styles,\n              }\n            })\n          })\n        )\n      })\n    )\n  }\n\n  getTeacher(uid: string): Observable<TeacherDTO> {\n    const ref = doc(this.teacherCollection, uid);\n    return from(getDoc(ref)).pipe(\n      map(data => data.data() as Teacher),\n      switchMap(teacher => {\n        return this.userApiService.getUser(teacher.profile_uid).pipe(\n          map(user => ({\n            uid: teacher.uid,\n            phone: user.phone,\n            email: user.email,\n            first_name: user.first_name,\n            middle_name: user.middle_name,\n            last_name: user.last_name,\n            avatar_url: user.avatar_urls[0],\n            start_date: teacher.start_date,\n            styles: teacher.styles,\n          }))\n        )\n      })\n    )\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TeacherDTO } from 'src/app/backend/model/teacher';\nimport { TeacherApiService } from 'src/app/backend/services/teacher-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeacherService {\n  private teacherApiService = inject(TeacherApiService);\n\n  getList(): Observable<TeacherDTO[]> {\n    return this.teacherApiService.getTeachers();\n  }\n}\n","<nb-card size=\"large\">\n  <nb-list>\n    <nb-list-item *ngFor=\"let teacher of list$ | async\">\n      <nb-user [picture]=\"teacher.avatar_url\" [name]=\"teacher.first_name + ' ' + teacher.last_name\" [title]=\"'Преподаватель'\">\n      </nb-user>\n    </nb-list-item>\n  </nb-list>\n</nb-card>\n","import { Component, inject } from '@angular/core';\nimport { TeacherService } from '../../services/teacher.service';\n\n@Component({\n  selector: 'app-teacher-list',\n  templateUrl: './teacher-list.component.html',\n  styleUrls: ['./teacher-list.component.scss']\n})\nexport class TeacherListComponent {\n  private teacherService = inject(TeacherService);\n  list$ = this.teacherService.getList();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeacherListComponent } from './teacher-list.component';\nimport { RouterModule } from '@angular/router';\nimport { NbCardModule, NbListModule, NbUserModule } from '@nebular/theme';\n\n\n\n@NgModule({\n  declarations: [\n    TeacherListComponent\n  ],\n  imports: [\n    CommonModule,\n    NbListModule,\n    NbCardModule,\n    NbUserModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: TeacherListComponent,\n        data: {\n          title: 'Список преподавателей',\n        }\n      },\n    ]),\n  ]\n})\nexport class TeacherListModule { }\n"],"x_google_ignoreList":[]}