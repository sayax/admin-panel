{"version":3,"file":"main.9a57af15f7135d70.js","mappings":"2IAGA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,aAAc,IAAMC,8BAAuCC,KAAKC,GAAKA,EAAEC,kBAEzE,CACEL,KAAM,OACNC,aAAc,IAAMC,8BAA+BC,KAAKC,GAAKA,EAAEE,eAQ7D,MAAOC,KAAgB,oCAAhBA,EAAgB,EAAhBA,EAAgB,sBAAhBA,MAAgB,0BAHjBC,aAAqBT,GACrBS,oGChBZC,oBAA0EA,yDAASA,iBAAQ,GACzFA,qBACFA,mEAGEA,eACEA,oBACFA,cAFsFA,gGAGtFA,eACEA,qBACFA,cAFqFA,+BCEjF,MAAOC,EANbC,cAOmBC,uBAAiBC,OAAOC,OACjCF,oBAAcC,OAAOE,MAE7BH,iBAAcA,KAAKI,YAAYC,kBAE/BC,SACEN,KAAKO,eAAeD,QACtB,wBCjBAT,8BACEA,sBACFA,SDOWC,EAAe,oCAAfA,EAAe,EAAfA,EAAe,sBAAfA,EAAeU,uZDV5BX,2CAGAA,cAAIA,iBAAKA,QACTA,iBACEA,sCAGAA,sCAGFA,eAXSA,uCAKHA,iDAGAA,wOGEA,MAAOY,EALbV,cAMEC,WAAQ,cACAA,eAASC,OAAOS,MACPV,uBAAiBC,OAAOC,OAEzCF,gBAAkCA,KAAKW,OAAOC,OAAOC,QACnDC,KAAQC,GAAUA,aAAiBC,OAAa,EAChDC,KAAKC,GAAWA,EAAwBC,MAAG,EAC3CF,KAAIC,IACF,MAAME,GAASF,EAAMG,SAAS,QAC9B,OAAKD,GACHpB,KAAKO,eAAee,WAEfF,MAbAX,EAAY,oCAAZA,EAAY,EAAZA,EAAY,sBAAZA,EAAYD,uIDVzBX,qBACEA,qDAGAA,wBAEAA,4BACEA,yBACFA,iBAPmBA,+PEDd,MAAM0B,EAAc,CACzBC,SAAU,CACRC,UAAW,iBACXC,MAAO,4CACPC,cAAe,6BACfC,OAAQ,0CACRC,WAAY,iCACZC,kBAAmB,+GC0GjB,MAAOC,KAAS,oCAATA,EAAS,EAATA,EAAS,sBAATA,EAASC,WAFRvB,KAEDsB,EAAS,2BALT,CACT,CAAEE,QAASC,KAAkBC,SAAUZ,aACxCa,SApFCC,KACA1C,KACA2C,MAAmB,OAAMC,MAAchB,cAAqB,EAC5DiB,MAAY,OAAMC,UAAS,EAC3BC,MAAgB,OAAMC,UAAa,EACnCC,MAAiB,OAAMC,UAAc,EACrCC,MAAiB,OAAMC,UAAc,EACrCC,MAAe,OAAMC,SACrBC,KACAC,cAAsB,CAAEC,KAAM,YAC9BC,KACAC,YAAqB,CACnBC,MAAO,CACLC,MAAO,CACLC,SAAU,WACVC,YAAY,EACZC,YAAa,IAEfC,SAAU,CACRH,SAAU,WACVI,OAAO,EACPF,YAAa,IAEfG,OAAQ,CACNL,SAAU,YAEZM,gBAAiB,CACfN,SAAU,WACVE,YAAa,IAEfK,cAAe,CACbP,SAAU,WACVE,YAAa,IAEfM,WAAY,CACVC,SAAU,CACRC,UAAU,EACVC,UAAW,EACXC,UAAW,IAEbC,MAAO,CACLH,UAAU,KAIhBI,WAAY,CACVC,WAAiC,CAC/BpB,KAAM,WACNI,MAAO,CACLiB,SAAU,CACRC,QAAS,MAGbd,SAAU,CACRa,SAAU,CACRC,QAAS,UAGbZ,OAAQ,CACNW,SAAU,CACRC,QAAS,KAGbX,gBAAiB,CACfU,SAAU,CACRC,QAAS,SAGbV,cAAe,CACbS,SAAU,CACRC,QAAS,cAMnBC,MACAC,eACAC,MACAC,MACAC,OCrGJC,OAAyBC,gBAAgBlD,GACtCmD,MAAMC,GAAOC,QAAQC,MAAMF","names":["routes","path","loadChildren","__webpack_require__","then","m","DashboardModule","LoginModule","AppRoutingModule","RouterModule","i0","HeaderComponent","constructor","this","inject","NbSidebarService","NbAuthService","authService","isAuthenticated","toggle","sidebarService","selectors","AppComponent","Router","router","events","pipe","filter","event","NavigationEnd","map","route","url","state","includes","collapse","environment","firebase","projectId","appId","storageBucket","apiKey","authDomain","messagingSenderId","AppModule","bootstrap","provide","FIREBASE_OPTIONS","useValue","imports","BrowserModule","provideFirebaseApp","initializeApp","provideAuth","getAuth","provideDatabase","getDatabase","provideFirestore","getFirestore","provideFunctions","getFunctions","provideStorage","getStorage","NoopAnimationsModule","NbThemeModule","name","NbFirebaseAuthModule","NbAuthModule","forms","login","strategy","rememberMe","socialLinks","register","terms","logout","requestPassword","resetPassword","validation","password","required","minLength","maxLength","email","strategies","NbFirebasePasswordStrategy","redirect","success","NbLayoutModule","NbSidebarModule","NbIconModule","NbButtonModule","NbEvaIconsModule","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","sources":["./src/app/app-routing.module.ts","./src/app/shared/header/header.component.html","./src/app/shared/header/header.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/environments/environment.production.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<button *ngIf=\"(isLoggedIn$ | async)\" nbButton status=\"basic\" size=\"tiny\" (click)=\"toggle()\">\n  <nb-icon icon=\"menu-outline\"></nb-icon>\n</button>\n<h1>Admin</h1>\n<div class=\"navigation\">\n  <a *ngIf=\"!(isLoggedIn$ | async)\" class=\"login\" nbButton status=\"primary\" size=\"tiny\" [routerLink]=\"['/auth']\">\n    Log in\n  </a>\n  <a *ngIf=\"(isLoggedIn$ | async)\" class=\"login\" nbButton status=\"primary\" size=\"tiny\" [routerLink]=\"['/auth/logout']\">\n    Log out\n  </a>\n</div>\n","import { Component, inject, ChangeDetectionStrategy } from '@angular/core';\nimport { NbSidebarService } from '@nebular/theme';\nimport { NbAuthService } from '@nebular/auth';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent {\n  private readonly sidebarService = inject(NbSidebarService);\n  private authService = inject(NbAuthService);\n\n  isLoggedIn$ = this.authService.isAuthenticated();\n\n  toggle() {\n    this.sidebarService.toggle();\n  }\n}\n","<nb-layout>\n  <nb-layout-header *ngIf=\"hasHeader$ | async\" fixed>\n    <app-header></app-header>\n  </nb-layout-header>\n  <nb-sidebar state=\"collapsed\"></nb-sidebar>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { Component, inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, map, Observable } from 'rxjs';\nimport { NbSidebarService } from '@nebular/theme';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'admin-panel';\n  private router = inject(Router);\n  private readonly sidebarService = inject(NbSidebarService);\n\n  hasHeader$: Observable<boolean> = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    map((route) => (route as NavigationEnd).url),\n    map(route => {\n      const state = !route.includes('auth');\n      if (!state) {\n        this.sidebarService.collapse();\n      }\n      return state;\n    })\n  );\n}\n","export const environment = {\n  firebase: {\n    projectId: 'adminpanelfire',\n    appId: '1:459068437086:web:9a4362f897fc83db06bacf',\n    storageBucket: 'adminpanelfire.appspot.com',\n    apiKey: 'AIzaSyCPPEzrugMj8qBy_XV11rpre81fj_fJGK0',\n    authDomain: 'adminpanelfire.firebaseapp.com',\n    messagingSenderId: '459068437086',\n  },};\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth } from '@angular/fire/auth';\nimport { provideDatabase, getDatabase } from '@angular/fire/database';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideFunctions, getFunctions } from '@angular/fire/functions';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbSidebarModule, NbIconModule, NbButtonModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { NbAuthModule } from '@nebular/auth';\nimport { NbFirebasePasswordStrategy, NbFirebaseAuthModule } from '@nebular/firebase-auth';\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideDatabase(() => getDatabase()),\n    provideFirestore(() => getFirestore()),\n    provideFunctions(() => getFunctions()),\n    provideStorage(() => getStorage()),\n    NoopAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbFirebaseAuthModule,\n    NbAuthModule.forRoot({\n      forms: {\n        login: {\n          strategy: 'password',\n          rememberMe: true,\n          socialLinks: [],\n        },\n        register: {\n          strategy: 'password',\n          terms: true,\n          socialLinks: [],\n        },\n        logout: {\n          strategy: 'password',\n        },\n        requestPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        resetPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        validation: {\n          password: {\n            required: true,\n            minLength: 6,\n            maxLength: 50,\n          },\n          email: {\n            required: true,\n          },\n        },\n      },\n      strategies: [\n        NbFirebasePasswordStrategy.setup({\n          name: 'password',\n          login: {\n            redirect: {\n              success: '/',\n            },\n          },\n          register: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n          logout: {\n            redirect: {\n              success: '',\n            },\n          },\n          requestPassword: {\n            redirect: {\n              success: 'auth',\n            },\n          },\n          resetPassword: {\n            redirect: {\n              success: 'auth',\n            },\n          },\n        }),\n      ],\n    }),\n    NbLayoutModule,\n    NbSidebarModule.forRoot(),\n    NbIconModule,\n    NbButtonModule,\n    NbEvaIconsModule,\n  ],\n  providers: [\n    { provide: FIREBASE_OPTIONS, useValue: environment.firebase }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}