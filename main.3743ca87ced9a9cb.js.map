{"version":3,"file":"main.3743ca87ced9a9cb.js","mappings":"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","names":["Collection","UserApiService","constructor","this","inject","Firestore","collection","firestore","getUsersInList","uids","length","of","usersQuery","query","profileCollection","where","from","getDocs","pipe","map","users","docs","user","data","getUser","uid","ref","doc","getDoc","factory","AuthService","userApiService","AuthenticatedGuard","NbAuthService","Router","canActivate","route","state","console","log","authService","isAuthenticated","tap","authenticated","router","navigate","routes","path","loadChildren","__webpack_require__","then","m","DashboardModule","LoginModule","ProfileModule","TeacherModule","AppRoutingModule","RouterModule","i0","HeaderComponent","NbSidebarService","ActivatedRoute","nbAuthService","getToken","switchMap","getPayload","user_id","events","filter","event","NavigationEnd","startWith","firstChild","title","toggle","sidebarService","selectors","AppComponent","link","pathMatch","url","includes","collapse","environment","firebase","projectId","appId","storageBucket","apiKey","authDomain","messagingSenderId","AppModule","bootstrap","provide","FIREBASE_OPTIONS","useValue","imports","BrowserModule","provideFirebaseApp","initializeApp","provideAuth","getAuth","provideDatabase","getDatabase","provideFirestore","getFirestore","provideFunctions","getFunctions","provideStorage","getStorage","NoopAnimationsModule","NbThemeModule","name","NbFirebaseAuthModule","NbAuthModule","forms","login","strategy","rememberMe","socialLinks","register","terms","logout","requestPassword","resetPassword","validation","password","required","minLength","maxLength","email","strategies","NbFirebasePasswordStrategy","redirect","success","NbLayoutModule","NbSidebarModule","NbMenuModule","NbIconModule","NbButtonModule","NbUserModule","NbEvaIconsModule","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","sources":["./src/app/backend/model/collections.ts","./src/app/backend/services/user-api.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/guards/authenticated.guard.ts","./src/app/app-routing.module.ts","./src/app/shared/header/header.component.html","./src/app/shared/header/header.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/environments/environment.production.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export enum Collection {\r\n  PROFILE = 'profile',\r\n  TEACHER = 'teacher',\r\n}\r\n","import { Injectable, inject } from '@angular/core';\nimport { Firestore, collection, collectionData, doc, getDoc, getDocs, query, where } from '@angular/fire/firestore';\nimport { Observable, from, map, of } from 'rxjs';\nimport { ProfileDTO } from '../model/profile';\nimport { Collection } from '../model/collections';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApiService {\n  private firestore: Firestore = inject(Firestore);\n  private profileCollection = collection(this.firestore, Collection.PROFILE);\n\n  getUsersInList(uids: string[]): Observable<ProfileDTO[]> {\n    if (!uids || !uids.length) {\n      return of([]);\n    }\n    const usersQuery = query(this.profileCollection, where('uid', 'in', uids));\n    const usersSnapshot = from(getDocs(usersQuery));\n    return usersSnapshot.pipe(\n      map(users => users.docs.map(user => user.data() as ProfileDTO)),\n    );\n  }\n\n  getUser(uid: string): Observable<ProfileDTO> {\n    const ref = doc(this.profileCollection, uid);\n    return from(getDoc(ref)).pipe(\n      map(data => data.data() as ProfileDTO),\n    )\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProfileDTO } from 'src/app/backend/model/profile';\nimport { UserApiService } from 'src/app/backend/services/user-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private userApiService = inject(UserApiService);\n\n  getUser(uid: string): Observable<ProfileDTO> {\n    return this.userApiService.getUser(uid);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { NbAuthService } from '@nebular/auth';\nimport { Observable, map, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticatedGuard implements CanActivate {\n  private authService = inject(NbAuthService);\n  private router = inject(Router);\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> {\n      console.log(route, state);\n    return this.authService.isAuthenticated().pipe(\n      tap(authenticated => {\n        if (!authenticated) {\n          this.router.navigate(['/auth']);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthenticatedGuard } from './shared/guards/authenticated.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule),\n    canActivate: [AuthenticatedGuard],\n  },\n  {\n    path: 'teacher',\n    loadChildren: () => import('./teacher/teacher.module').then(m => m.TeacherModule),\n    canActivate: [AuthenticatedGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<button *ngIf=\"(isLoggedIn$ | async)\" nbButton status=\"basic\" size=\"tiny\" class=\"burger\" (click)=\"toggle()\">\n  <nb-icon icon=\"menu-outline\"></nb-icon>\n</button>\n<h1>{{ title$ | async }}</h1>\n<div class=\"navigation\">\n  <a *ngIf=\"!(isLoggedIn$ | async); else loggedIn\" class=\"login\" nbButton status=\"basic\" size=\"tiny\" [routerLink]=\"['/auth']\">\n    <nb-icon icon=\"person-outline\"></nb-icon>\n  </a>\n  <ng-template #loggedIn>\n    <nb-user *ngIf=\"user$ | async as user\" [picture]=\"user.avatar_urls[0]\" [name]=\"user.first_name + ' ' + user.last_name\">\n    </nb-user>\n  </ng-template>\n</div>\n","import { Component, inject, ChangeDetectionStrategy } from '@angular/core';\nimport { NbSidebarService } from '@nebular/theme';\nimport { NbAuthService } from '@nebular/auth';\nimport { map, filter, switchMap, of, startWith } from 'rxjs';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent {\n  private readonly sidebarService = inject(NbSidebarService);\n  private nbAuthService = inject(NbAuthService);\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n  isLoggedIn$ = this.nbAuthService.isAuthenticated();\n\n  user$ = this.nbAuthService.getToken().pipe(switchMap(user => {\n    return this.authService.getUser(user.getPayload().user_id);\n  }));\n\n  title$ = this.router.events.pipe(\n    filter(event => event instanceof NavigationEnd),\n    startWith(this.router),\n    switchMap(() => {\n      let route = this.route.firstChild;\n      while (route?.firstChild) {\n        route = route.firstChild;\n      }\n      return route?.data ?? of({ title: 'Admin' });\n    }),\n    map(data => data['title']),\n  )\n\n  toggle() {\n    this.sidebarService.toggle();\n  }\n}\n","<nb-layout>\n  <nb-layout-header *ngIf=\"hasHeader$ | async\" fixed>\n    <app-header></app-header>\n  </nb-layout-header>\n  <nb-sidebar state=\"collapsed\">\n    <nb-menu [items]=\"items\"></nb-menu>\n  </nb-sidebar>\n\n  <nb-layout-column [class.main-layout]=\"hasHeader$ | async\">\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { Component, inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, map, Observable } from 'rxjs';\nimport { NbMenuItem, NbSidebarService } from '@nebular/theme';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'admin-panel';\n  items: NbMenuItem[] = [\n    {\n      title: 'Главная',\n      link: '/',\n    },\n    {\n      title: 'Профиль',\n      link: '/profile',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Список преподавателей',\n      link: '/teacher',\n      pathMatch: 'prefix',\n    },\n    {\n      title: 'Список учеников',\n      link: '/student',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Контакты',\n      link: '/contact',\n      pathMatch: 'full',\n    },\n    {\n      title: 'О нас',\n      link: '/about',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Выйти',\n      link: '/auth/logout',\n    },\n  ]\n  private router = inject(Router);\n  private readonly sidebarService = inject(NbSidebarService);\n\n  hasHeader$: Observable<boolean> = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    map((route) => (route as NavigationEnd).url),\n    map(route => {\n      const state = !route.includes('auth');\n      if (!state) {\n        this.sidebarService.collapse();\n      }\n      return state;\n    })\n  );\n}\n","export const environment = {\n  firebase: {\n    projectId: 'adminpanelfire',\n    appId: '1:459068437086:web:9a4362f897fc83db06bacf',\n    storageBucket: 'adminpanelfire.appspot.com',\n    apiKey: 'AIzaSyCPPEzrugMj8qBy_XV11rpre81fj_fJGK0',\n    authDomain: 'adminpanelfire.firebaseapp.com',\n    messagingSenderId: '459068437086',\n  },};\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth } from '@angular/fire/auth';\nimport { provideDatabase, getDatabase } from '@angular/fire/database';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideFunctions, getFunctions } from '@angular/fire/functions';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbSidebarModule, NbIconModule, NbButtonModule, NbMenuModule, NbUserModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { NbAuthModule } from '@nebular/auth';\nimport { NbFirebasePasswordStrategy, NbFirebaseAuthModule } from '@nebular/firebase-auth';\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideDatabase(() => getDatabase()),\n    provideFirestore(() => getFirestore()),\n    provideFunctions(() => getFunctions()),\n    provideStorage(() => getStorage()),\n    NoopAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbFirebaseAuthModule,\n    NbAuthModule.forRoot({\n      forms: {\n        login: {\n          strategy: 'password',\n          rememberMe: true,\n          socialLinks: [],\n        },\n        register: {\n          strategy: 'password',\n          terms: true,\n          socialLinks: [],\n        },\n        logout: {\n          strategy: 'password',\n        },\n        requestPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        resetPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        validation: {\n          password: {\n            required: true,\n            minLength: 6,\n            maxLength: 50,\n          },\n          email: {\n            required: true,\n          },\n        },\n      },\n      strategies: [\n        NbFirebasePasswordStrategy.setup({\n          name: 'password',\n          login: {\n            redirect: {\n              success: '/',\n            },\n          },\n          register: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n          logout: {\n            redirect: {\n              success: '/',\n            },\n          },\n          requestPassword: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n          resetPassword: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n        }),\n      ],\n    }),\n    NbLayoutModule,\n    NbSidebarModule.forRoot(),\n    NbMenuModule.forRoot(),\n    NbIconModule,\n    NbButtonModule,\n    NbUserModule,\n    NbEvaIconsModule,\n  ],\n  providers: [\n    { provide: FIREBASE_OPTIONS, useValue: environment.firebase }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}