{"version":3,"file":"main.200a1f1ebadd57fb.js","mappings":"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","names":["Collection","MediaService","constructor","this","inject","Storage","uploadFile","file","path","Error","storageRef","ref","fireStorage","Date","now","name","task","uploadBytes","from","getMedia","getDownloadURL","factory","UserApiService","Firestore","collection","firestore","getUsers","usersQuery","query","profileCollection","getDocs","pipe","map","data","docs","doc","getUsersNotTeachers","where","getUsersInList","uids","length","of","users","user","getUser","uid","getDoc","getUserChanges","docSnapshots","updateUser","switchMap","updated_on","Timestamp","exists","updateDoc","created_on","setDoc","MediaUrlPipe","transform","value","mediaService","pure","AuthService","userApiService","SharedModule","CommonModule","AuthenticatedGuard","NbAuthService","Router","canActivate","route","state","authService","isAuthenticated","tap","authenticated","router","navigate","routes","loadChildren","__webpack_require__","then","m","DashboardModule","LoginModule","ProfileModule","TeacherModule","Promise","AppCalendarModule","EventModule","AppRoutingModule","RouterModule","i0","HeaderComponent","NbSidebarService","ActivatedRoute","nbAuthService","getToken","console","log","getPayload","user_id","events","filter","event","NavigationEnd","startWith","firstChild","title","ngOnInit","sidebarService","collapse","subscribe","toggle","selectors","AppComponent","link","pathMatch","url","includes","environment","firebase","projectId","appId","storageBucket","apiKey","authDomain","messagingSenderId","registerLocaleData","localeRu","localeKk","AppModule","bootstrap","provide","FIREBASE_OPTIONS","useValue","LOCALE_ID","imports","BrowserModule","provideFirebaseApp","initializeApp","provideAuth","getAuth","provideDatabase","getDatabase","provideFirestore","getFirestore","provideFunctions","getFunctions","provideStorage","getStorage","NoopAnimationsModule","NbThemeModule","NbFirebaseAuthModule","NbAuthModule","forms","login","strategy","rememberMe","socialLinks","register","terms","logout","requestPassword","resetPassword","validation","password","required","minLength","maxLength","email","strategies","NbFirebasePasswordStrategy","redirect","success","NbLayoutModule","NbSidebarModule","NbMenuModule","NbDialogModule","closeOnBackdropClick","NbToastrModule","duration","position","NbGlobalPhysicalPosition","NbDatepickerModule","NbTimepickerModule","NbIconModule","NbButtonModule","NbUserModule","NbEvaIconsModule","CalendarModule","DateAdapter","useFactory","adapterFactory","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","sources":["./src/app/backend/model/collections.ts","./src/app/backend/services/media.service.ts","./src/app/backend/services/user-api.service.ts","./src/app/shared/pipes/media-url.pipe.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/guards/authenticated.guard.ts","./src/app/app-routing.module.ts","./src/app/shared/header/header.component.html","./src/app/shared/header/header.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/environments/environment.production.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export enum Collection {\r\n  PROFILE = 'profile',\r\n  TEACHER = 'teacher',\r\n  EVENTS = 'events',\r\n  EVENT_SCHEDULES = 'schedules',\r\n  ACL = 'ACL',\r\n}\r\n","import { Injectable, inject } from '@angular/core';\nimport { Firestore, documentId } from '@angular/fire/firestore';\nimport { Storage, UploadResult, UploadTask, getDownloadURL, ref, uploadBytes, uploadBytesResumable } from '@angular/fire/storage';\nimport { Observable, from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaService {\n  private fireStorage = inject(Storage);\n\n  uploadFile(file: File | null, path: string): Observable<UploadResult> {\n    if (!file) {\n      throw new Error('File not provided');\n    }\n    const storageRef = ref(this.fireStorage, `${path}/${Date.now()}-${file.name}`);\n    const task = uploadBytes(storageRef, file);\n    return from(task);\n  }\n\n  getMedia(path: string): Observable<string> {\n    const storageRef = ref(this.fireStorage, path);\n    return from(getDownloadURL(storageRef));\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { Firestore, Timestamp, addDoc, collection, doc, docSnapshots, getDoc, getDocs, query, setDoc, updateDoc, where } from '@angular/fire/firestore';\nimport { Observable, from, map, of, switchMap } from 'rxjs';\nimport { ProfileDTO } from '../model/profile';\nimport { Collection } from '../model/collections';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApiService {\n  private firestore: Firestore = inject(Firestore);\n  private profileCollection = collection(this.firestore, Collection.PROFILE);\n\n  getUsers(): Observable<ProfileDTO[]> {\n    const usersQuery = query(this.profileCollection);\n    return from(getDocs(usersQuery)).pipe(\n      map(data => data.docs.map(doc => doc.data() as ProfileDTO)),\n    )\n  }\n\n  getUsersNotTeachers(): Observable<ProfileDTO[]> {\n    const usersQuery = query(this.profileCollection, where('is_blocked', '==', false), where('is_teacher', '==', false));\n    return from(getDocs(usersQuery)).pipe(\n      map(data => data.docs.map(doc => doc.data() as ProfileDTO)),\n    )\n  }\n\n  getUsersInList(uids: string[]): Observable<ProfileDTO[]> {\n    if (!uids || !uids.length) {\n      return of([]);\n    }\n    const usersQuery = query(this.profileCollection, where('uid', 'in', uids));\n    const usersSnapshot = from(getDocs(usersQuery));\n    return usersSnapshot.pipe(\n      map(users => users.docs.map(user => user.data() as ProfileDTO)),\n    );\n  }\n\n  getUser(uid: string): Observable<ProfileDTO> {\n    const ref = doc(this.profileCollection, uid);\n    return from(getDoc(ref)).pipe(\n      map(data => data.data() as ProfileDTO),\n    )\n  }\n\n  /**\n   *\n   * @param uid uid of a user\n   * @returns a continuous observer which updates everytime user changes\n   */\n  getUserChanges(uid: string): Observable<ProfileDTO> {\n    const ref = doc(this.profileCollection, uid);\n    return docSnapshots(ref).pipe(\n      map(doc => doc.data() as ProfileDTO),\n    );\n  }\n\n  updateUser(user: Partial<ProfileDTO>): Observable<void> {\n    const ref = doc(this.profileCollection, user.uid);\n    return from(getDoc(ref)).pipe(\n      switchMap(doc => {\n        user.updated_on = Timestamp.now();\n        if (doc.exists()) {\n          return from(updateDoc(ref, user))\n        }\n        user.created_on = Timestamp.now();\n        return from(setDoc(ref, user))\n      }),\n    )\n  }\n}\n","import { Pipe, PipeTransform, inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MediaService } from 'src/app/backend/services/media.service';\n\n@Pipe({\n  name: 'mediaUrl',\n})\nexport class MediaUrlPipe implements PipeTransform {\n  private mediaService = inject(MediaService);\n\n  transform(value: string): Observable<string> {\n    if (!value) {\n      return of('');\n    }\n    return this.mediaService.getMedia(value);\n  }\n\n}\n","import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProfileDTO } from 'src/app/backend/model/profile';\nimport { UserApiService } from 'src/app/backend/services/user-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private userApiService = inject(UserApiService);\n\n  getUser(uid: string): Observable<ProfileDTO> {\n    return this.userApiService.getUser(uid);\n  }\n\n  getUserChanges(uid: string): Observable<ProfileDTO> {\n    return this.userApiService.getUserChanges(uid);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MediaUrlPipe } from './pipes/media-url.pipe';\nimport { UserPipe } from './pipes/user.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    MediaUrlPipe,\n    UserPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    MediaUrlPipe,\n    UserPipe,\n  ]\n})\nexport class SharedModule { }\n","import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { NbAuthService } from '@nebular/auth';\nimport { Observable, map, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticatedGuard implements CanActivate {\n  private authService = inject(NbAuthService);\n  private router = inject(Router);\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> {\n    return this.authService.isAuthenticated().pipe(\n      tap(authenticated => {\n        if (!authenticated) {\n          this.router.navigate(['/auth']);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthenticatedGuard } from './shared/guards/authenticated.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule),\n    canActivate: [AuthenticatedGuard],\n  },\n  {\n    path: 'teacher',\n    loadChildren: () => import('./teacher/teacher.module').then(m => m.TeacherModule),\n    canActivate: [AuthenticatedGuard],\n  },\n  {\n    path: 'calendar',\n    loadChildren: () => import('./calendar/calendar.module').then(m => m.AppCalendarModule),\n    canActivate: [AuthenticatedGuard],\n  },\n  {\n    path: 'event',\n    loadChildren: () => import('./event/event.module').then(m => m.EventModule),\n    canActivate: [AuthenticatedGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<button *ngIf=\"(isLoggedIn$ | async)\" nbButton status=\"basic\" size=\"tiny\" class=\"burger\" (click)=\"toggle()\">\n  <nb-icon icon=\"menu-outline\"></nb-icon>\n</button>\n<h1>{{ title$ | async }}</h1>\n<div class=\"navigation\">\n  <a *ngIf=\"!(isLoggedIn$ | async); else loggedIn\" class=\"login\" nbButton status=\"basic\" size=\"tiny\" [routerLink]=\"['/auth']\">\n    <nb-icon icon=\"person-outline\"></nb-icon>\n  </a>\n  <ng-template #loggedIn>\n    <nb-user *ngIf=\"user$ | async as user\" [picture]=\"user.avatar_urls ? ((user.avatar_urls[0] | mediaUrl | async) || '') : ''\" [name]=\"user.first_name\">\n    </nb-user>\n  </ng-template>\n</div>\n","import { Component, inject, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { NbSidebarService } from '@nebular/theme';\nimport { NbAuthService } from '@nebular/auth';\nimport { map, filter, switchMap, of, startWith, tap } from 'rxjs';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent implements OnInit {\n  private readonly sidebarService = inject(NbSidebarService);\n  private nbAuthService = inject(NbAuthService);\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n  isLoggedIn$ = this.nbAuthService.isAuthenticated();\n\n  user$ = this.nbAuthService.getToken().pipe(switchMap(user => {\n    console.log({ user })\n    return this.authService.getUserChanges(user.getPayload().user_id);\n  }));\n\n  title$ = this.router.events.pipe(\n    filter(event => event instanceof NavigationEnd),\n    startWith(this.router),\n    switchMap(() => {\n      let route = this.route.firstChild;\n      while (route?.firstChild) {\n        route = route.firstChild;\n      }\n      return route?.data ?? of({ title: 'Admin' });\n    }),\n    map(data => data['title']),\n  )\n\n  ngOnInit(): void {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      tap(() => {\n        this.sidebarService.collapse();\n      }),\n    ).subscribe()\n  }\n\n  toggle() {\n    this.sidebarService.toggle();\n  }\n}\n","<nb-layout>\n  <nb-layout-header *ngIf=\"hasHeader$ | async\" fixed>\n    <app-header></app-header>\n  </nb-layout-header>\n  <nb-sidebar state=\"collapsed\">\n    <nb-menu [items]=\"items\"></nb-menu>\n  </nb-sidebar>\n\n  <nb-layout-column [class.main-layout]=\"hasHeader$ | async\">\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { Component, inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, map, Observable } from 'rxjs';\nimport { NbMenuItem, NbSidebarService } from '@nebular/theme';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'admin-panel';\n  items: NbMenuItem[] = [\n    {\n      title: 'Главная',\n      link: '/',\n    },\n    {\n      title: 'Профиль',\n      link: '/profile',\n      pathMatch: 'full',\n    },\n    {\n      title: 'События',\n      link: '/event',\n      pathMatch: 'prefix',\n    },\n    {\n      title: 'Календарь',\n      link: '/calendar',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Список преподавателей',\n      link: '/teacher',\n      pathMatch: 'prefix',\n    },\n    {\n      title: 'Список учеников',\n      link: '/student',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Контакты',\n      link: '/contact',\n      pathMatch: 'full',\n    },\n    {\n      title: 'О нас',\n      link: '/about',\n      pathMatch: 'full',\n    },\n    {\n      title: 'Выйти',\n      link: '/auth/logout',\n    },\n  ]\n  private router = inject(Router);\n  private readonly sidebarService = inject(NbSidebarService);\n\n  hasHeader$: Observable<boolean> = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    map((route) => (route as NavigationEnd).url),\n    map(route => {\n      const state = !route.includes('auth');\n      if (!state) {\n        this.sidebarService.collapse();\n      }\n      return state;\n    })\n  );\n}\n","export const environment = {\n  firebase: {\n    projectId: 'adminpanelfire',\n    appId: '1:459068437086:web:9a4362f897fc83db06bacf',\n    storageBucket: 'adminpanelfire.appspot.com',\n    apiKey: 'AIzaSyCPPEzrugMj8qBy_XV11rpre81fj_fJGK0',\n    authDomain: 'adminpanelfire.firebaseapp.com',\n    messagingSenderId: '459068437086',\n  },};\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport localeRu from '@angular/common/locales/ru';\nimport localeKk from '@angular/common/locales/kk';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth } from '@angular/fire/auth';\nimport { provideDatabase, getDatabase } from '@angular/fire/database';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideFunctions, getFunctions } from '@angular/fire/functions';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbSidebarModule, NbIconModule, NbButtonModule, NbMenuModule, NbUserModule, NbToastrModule, NbGlobalPositionStrategy, NbGlobalPhysicalPosition, NbDialogModule, NbDatepickerModule, NbTimepickerModule, NbNativeDateService } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { NbAuthModule } from '@nebular/auth';\nimport { NbFirebasePasswordStrategy, NbFirebaseAuthModule } from '@nebular/firebase-auth';\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { SharedModule } from './shared/shared.module';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { registerLocaleData } from '@angular/common';\n\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeKk);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideDatabase(() => getDatabase()),\n    provideFirestore(() => getFirestore()),\n    provideFunctions(() => getFunctions()),\n    provideStorage(() => getStorage()),\n    NoopAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbFirebaseAuthModule,\n    NbAuthModule.forRoot({\n      forms: {\n        login: {\n          strategy: 'password',\n          rememberMe: true,\n          socialLinks: [],\n        },\n        register: {\n          strategy: 'password',\n          terms: true,\n          socialLinks: [],\n        },\n        logout: {\n          strategy: 'password',\n        },\n        requestPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        resetPassword: {\n          strategy: 'password',\n          socialLinks: [],\n        },\n        validation: {\n          password: {\n            required: true,\n            minLength: 6,\n            maxLength: 50,\n          },\n          email: {\n            required: true,\n          },\n        },\n      },\n      strategies: [\n        NbFirebasePasswordStrategy.setup({\n          name: 'password',\n          login: {\n            redirect: {\n              success: '/',\n            },\n          },\n          register: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n          logout: {\n            redirect: {\n              success: '/',\n            },\n          },\n          requestPassword: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n          resetPassword: {\n            redirect: {\n              success: '/auth',\n            },\n          },\n        }),\n      ],\n    }),\n    NbLayoutModule,\n    NbSidebarModule.forRoot(),\n    NbMenuModule.forRoot(),\n    NbDialogModule.forRoot({\n      closeOnBackdropClick: true,\n    }),\n    NbToastrModule.forRoot({\n      duration: 2000,\n      position: NbGlobalPhysicalPosition.TOP_RIGHT,\n    }),\n    NbDatepickerModule.forRoot(),\n    NbTimepickerModule.forRoot(),\n    NbIconModule,\n    NbButtonModule,\n    NbUserModule,\n    NbEvaIconsModule,\n    SharedModule,\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\n  ],\n  providers: [\n    { provide: FIREBASE_OPTIONS, useValue: environment.firebase },\n    { provide: LOCALE_ID, useValue: 'ru' },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}